name: Snyk Security Scan and Issue Creation 
on:
  push:
    branches:
      - main

permissions:
  actions: write
  issues: write
  security-events: write

jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: code test
          args: "--sarif-file-output=path/snyk.sarif"

      - name: Upload SARIF to GitHub Security Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: path/snyk.sarif
          token: ${{ secrets.GITHUB_TOKEN }}
          wait-for-processing: true

      - name: Create issues for code scanning alerts
        if: success() # Only runs if previous steps succeed
        run: |
          # Fetch the code scanning alerts from GitHub Security
          ALERTS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/code-scanning/alerts")

          # Check if the response is empty or not
          if [[ -z "$ALERTS" ]]; then
            echo "Error: No response or no alerts found from GitHub API."
            exit 1
          fi

          # Count the number of alerts
          TOTAL_ALERTS=$(echo "$ALERTS" | grep -o '"rule":' | wc -l)

          if [ "$TOTAL_ALERTS" -gt 0 ]; then
            echo "Code scanning alerts found. Creating issues..."

            # Loop through the alerts and create issues
            echo "$ALERTS" | while read -r line; do
              # Extract relevant fields from the raw JSON data
              if [[ "$line" =~ '"rule":' ]]; then
                RULE_NAME=$(echo "$line" | sed -n 's/.*"name": "\(.*\)",/\1/p')
                MESSAGE=$(echo "$line" | sed -n 's/.*"message": { "text": "\(.*\)" }/\1/p')
                SEVERITY=$(echo "$line" | sed -n 's/.*"severity": "\(.*\)"/\1/p')
                ALERT_URL=$(echo "$line" | sed -n 's/.*"html_url": "\(.*\)"/\1/p')

                ISSUE_TITLE="Fix code scanning alert - $RULE_NAME"
                ISSUE_BODY="**Severity**: $SEVERITY\n**Message**: $MESSAGE\n\nTracking issue for:\n- [ ] $ALERT_URL"

                # Create an issue using GitHub's API
                curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                  -d "{\"title\":\"$ISSUE_TITLE\", \"body\":\"$ISSUE_BODY\", \"labels\":[\"security\"]}" \
                  https://api.github.com/repos/${{ github.repository }}/issues
              fi
            done
          else
            echo "No code scanning alerts found."
          fi
